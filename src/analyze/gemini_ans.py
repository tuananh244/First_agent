import sys
from pathlib import Path

# Th√™m root v√†o sys.path ƒë·ªÉ import gemini module ·ªü th∆∞ m·ª•c cha
sys.path.append(str(Path(__file__).resolve().parent.parent))
import gemini  # ƒê·∫£m b·∫£o b·∫°n ƒë√£ c√≥ module n√†y: gemini.call_gemini(prompt)

def read_diff_markdown(md_path: str) -> str:
    """
    ƒê·ªçc n·ªôi dung markdown t·ª´ file diff_report.md.

    Args:
        md_path (str): ƒê∆∞·ªùng d·∫´n ƒë·∫øn file markdown.

    Returns:
        str: N·ªôi dung file markdown.
    """
    path = Path(md_path)
    if not path.exists():
        raise FileNotFoundError(f"‚ùå File not found: {md_path}")
    print(f"üìÑ Reading markdown file: {path.read_text}")
    return path.read_text(encoding="utf-8")

def generate_gemini_prompt_for_diff_summary(md_content: str) -> str:
    """
    Sinh prompt ƒë·ªÉ g·ª≠i t·ªõi Gemini nh·∫±m t√≥m t·∫Øt l·ªói b·∫£o m·∫≠t t·ª´ n·ªôi dung file diff_report.md.

    Args:
        md_content (str): N·ªôi dung markdown c·ªßa b√°o c√°o ph√¢n t√≠ch git diff.

    Returns:
        str: Prompt ho√†n ch·ªânh ƒë·ªÉ g·ª≠i t·ªõi Gemini.
    """
    prompt = f"""
You are a security researcher specialized in Kubernetes and NGINX.

Below is a Git diff report or vulnerability analysis related to the Ingress-NGINX controller. Your task is to analyze the vulnerability and explain its root cause and patch.

Respond in the following format:

1. **Summary (‚â§80 words):**
Briefly summarize the core vulnerability and its impact using clear, technical terms (e.g., ‚ÄúRCE via path traversal in annotation parsing‚Äù).

2. **Analysis:**
Explain:
- Why the vulnerability existed (e.g., missing validation, unsafe file path construction).
- Which parts of the code were affected (file/function names).
- How an attacker could exploit it.
- How the patch mitigates the issue (e.g., new validation, filepath.Join usage, regex to block CRLF).
Use precise technical language. Avoid markdown or lists unless needed for clarity.

Here is the input report:
```markdown
{md_content}
```
"""
    return gemini.call_gemini(prompt)

